{"version":3,"file":"static/js/264.09aedd32.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Common/Paginator/Paginator.module.css?308c","components/Common/Paginator/Paginator.tsx","webpack://my-app/./src/components/Users/users.module.css?9211","components/Users/User.tsx","components/Users/UserSearchForm.tsx","components/Users/Users.tsx","components/Users/UserPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__raO36\",\"pageNumber\":\"Paginator_pageNumber__bptVQ\",\"selectedPage\":\"Paginator_selectedPage__UkHSv\"};","import React, { useState } from 'react';\nimport styles from './Paginator.module.css';\nimport cn from 'classnames';\nimport { Button } from 'antd';\n\ntype PropsType = {\n  totalUserCount: number, \n  pageSize: number, \n  curruntPage: number, \n  onPageChange: (pageNumber: number) => void, \n  portionSize?: number\n}\n\nconst Paginator: React.FC<PropsType> = ({totalUserCount, pageSize, curruntPage, onPageChange, portionSize = 10}) => {\n\n  let pagesCount = Math.ceil(totalUserCount / pageSize);\n  let pages: Array<number> = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i)\n  }\n\n  let potrionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let righttPortionPageNumber = portionNumber * portionSize;\n\n  return (\n      <div className={styles.paginator}>\n        {portionNumber > 1 &&\n        <Button onClick={() => setPortionNumber(portionNumber - 1)}>Previos</Button>\n}\n        {pages.filter(p => p >= leftPortionPageNumber && p <= righttPortionPageNumber)\n        .map((p, i) => {\n          return <span key={'-' + i}\n            className={cn({\n             [styles.selectedPage] : curruntPage === p \n            }, styles.pageNumber )}\n            onClick={(e) => {onPageChange(p) ;\n            }}>{p}</span>\n        })}\n\n        { potrionCount > portionNumber &&\n           <Button onClick={() => setPortionNumber(portionNumber + 1)}>Next</Button>\n        }\n      </div>\n\n  )\n}\n\nexport default Paginator","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"users_userPhoto__J5qHX\",\"buttonFollow\":\"users_buttonFollow__6VvmC\",\"searchFormUser\":\"users_searchFormUser__6q09I\",\"blockUsersList\":\"users_blockUsersList__exUl8\",\"oneUserSearch\":\"users_oneUserSearch__+uQlO\",\"status\":\"users_status__GVjom\",\"nameUser\":\"users_nameUser__-3acb\",\"errorFiledMessage\":\"users_errorFiledMessage__3J6zu\",\"errorField\":\"users_errorField__Sm-Rq\"};","import React from 'react';\nimport styles from './users.module.css';\nimport userPhoto from './../../assets/images/image-user.png'\nimport { NavLink } from 'react-router-dom';\nimport { UserType, } from '../../types/types';\nimport { Button } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { getMyId } from '../../redux/dialog-selector';\n\ntype PropsType = {\n  users: UserType\n  followingInProgres: Array<number>\n  unfollow: (userId: number) => void\n  follow: (userId: number) => void\n  createChat: (userId: number) => void\n}\n\nconst User: React.FC<PropsType> = ({ users, followingInProgres, unfollow, follow, createChat }) => {\n  const myUserId = useSelector(getMyId);\n\n  return (\n    <div className={styles.oneUserSearch}>\n      <NavLink  to={myUserId === users.id ? '/' : '/profile/' + users.id  }>\n        <img src={(users.photos.small !== null) ? users.photos.small : userPhoto} alt=\"got\" className={styles.userPhoto} />\n      </NavLink>\n      <div className={styles.nameUser}>\n        <NavLink to={myUserId === users.id ? '/' : '/profile/' + users.id }>{users.name}</NavLink>\n      </div>\n      <div className={styles.status}>{users.status} </div>\n      {myUserId !== users.id ? \n      <div className={styles.sendMessage}>\n        {users.followed\n          ? <Button className={styles.buttonFollow} disabled={followingInProgres.some(id => id === users.id)} onClick={() => {\n            unfollow(users.id)\n          }}>Unfollow</Button>\n          : <Button className={styles.buttonFollow} disabled={followingInProgres.some(id => id === users.id)} onClick={() => {\n            follow(users.id)\n          }}>Follow</Button>}\n        { }    <Button onClick={() => createChat(users.id)}>Send Message</Button>\n      </div>\n      : ''\n    }\n    </div>\n  )\n}\n\nexport default User","import { Button } from 'antd';\nimport { Field, Form, Formik } from 'formik';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUsersFilter } from '../../redux/user-selectors';\nimport { FilterType } from '../../redux/usere_reducer';\nimport s from '../Users/users.module.css'\ntype  ValuesType = {\n  term?: string\n  friend?: string\n}\nconst userSearchFormValidate = (values: ValuesType) => {\n\n  const errors: ValuesType = {};\n/*   if (!values.term) {\n    errors.term = 'Required';\n  }  */\n\n  return errors;\n};\n\n\nexport const UserSearchForm: React.FC<PropsType> = React.memo((props) => {\n\n  const filter = useSelector(getUsersFilter);\n\n  const sumbit = (values: FormType,\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void; }) => {\n      \n      const filter: FilterType = {\n        term: values.term,\n        friend: values.friend === 'null' ? null : values.friend === 'true'? true: false\n      }\n    props.onFilterChange(filter);\n    setSubmitting(false)\n  };\n\n  return (\n    <div>\n      <Formik\n      enableReinitialize={true}\n        initialValues={{ term: filter.term, friend: String(filter.friend) as FriendFormType }}\n        validate={userSearchFormValidate}\n        onSubmit={sumbit}\n      >\n        {({ isSubmitting, errors }) => (\n          <Form>\n            <div className={s.errorField}>\n            <Field type=\"text\" placeholder='Enter a user name' className={s.searchFormUser} name=\"term\" />\n            {errors.term  ? (\n             <span className={s.errorFiledMessage}>{errors.term}</span>\n           ) : null}\n           </div>\n            <Field className={s.searchFormUser} name=\"friend\" as=\"select\">\n              <option value=\"null\">All</option>\n              <option value=\"true\">Only followed</option>\n              <option value=\"false\">Only unfollowed</option>\n            </Field>\n            <button className=\"ant-btn ant-btn-default users_buttonFollow__6VvmC\" disabled={isSubmitting}>\n              Search\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n});\n\n\n//type ---\ntype PropsType = {\n  onFilterChange: (fitler: FilterType) => void\n}\n\ntype FriendFormType = 'true' | 'false' | 'null';\n\ntype FormType =  {\n  term: string,\n  friend: FriendFormType\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { createDiologs } from '../../redux/dialogs-reducer';\nimport { AppDispatch } from '../../redux/redux-store';\nimport { getCurruntPage, getFollowingInProgres, getPageSize, getTotalUserCount, getUsersFilter, getUsersSelectorSuper } from '../../redux/user-selectors';\nimport { FilterType, follows, reqestUser, unfollows } from '../../redux/usere_reducer';\nimport Paginator from '../Common/Paginator/Paginator';\nimport User from './User';\nimport { UserSearchForm } from './UserSearchForm';\nimport s from '../Users/users.module.css'\nimport { getMyId } from '../../redux/dialog-selector';\ntype QueryParamsType = {\n  term?: string;\n  page?: string;\n  friend?: string;\n  count?: string;\n};\n\ntype UsersType = {\n}\n\nexport const Users: React.FC<UsersType> = (props) => {\n\n\n\n  const users = useSelector(getUsersSelectorSuper);\n  const totalUserCount = useSelector(getTotalUserCount);\n  const curruntPage = useSelector(getCurruntPage);\n  const pageSize = useSelector(getPageSize);\n  const filter = useSelector(getUsersFilter);\n  const followingInProgres = useSelector(getFollowingInProgres);\n  const dispatch: AppDispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(reqestUser(curruntPage, pageSize, filter));\n  }, [])\n\n  const location = useLocation();\n  useEffect(() => {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(location.search) as QueryParamsType;\n    let actualFilter = filter;\n    let actualPage = curruntPage;\n\n    if (parsed.page) { actualPage = +parsed.page };\n    if (!!parsed.term) { actualFilter = { ...actualFilter, term: parsed.term } };\n\n    switch (parsed.friend) {\n      case 'null':\n        actualFilter = { ...actualFilter, friend: null }\n        break;\n      case 'true':\n        actualFilter = { ...actualFilter, friend: true }\n        break;\n      default:\n        actualFilter = { ...actualFilter, friend: false }\n    }\n\n    dispatch(reqestUser(actualPage, pageSize, actualFilter));\n\n  }, []);\n\n  const history = useNavigate();\n  useEffect(() => {\n    const query: QueryParamsType = {};\n    debugger\n    if (!!filter.term) { query.term = filter.term };\n    if (filter.friend !== null) { query.friend = String(filter.friend) };\n    if (curruntPage !== 1) { query.page = String(curruntPage) };\n    debugger\n    const queryString = require('query-string');\n    let queryStrings = queryString.stringify(query);\n    history(`/users?` + queryStrings);\n\n  }, [filter, curruntPage, pageSize]);\n\n  const onPageChange = (pageNumber: number) => {\n    dispatch(reqestUser(pageNumber, pageSize, filter));\n  }\n\n  const onFilterChange = (filter: FilterType) => {\n    dispatch(reqestUser(1, pageSize, filter));\n  }\n\n  const unfollow = (userId: number) => {\n    dispatch(unfollows(userId));\n  }\n  const follow = (userId: number) => {\n    dispatch(follows(userId));\n  }\n  const createChat = (friendId: number) => {\n    dispatch(createDiologs(friendId))\n    return history(`/dialogs/${friendId}/`)\n  }\n \n  return (\n    <div>\n      <UserSearchForm onFilterChange={onFilterChange} />\n      <div className={s.blockUsersList}>\n        {users.map(u =>\n          <User users={u} key={u.id} followingInProgres={followingInProgres} unfollow={unfollow} follow={follow} createChat={createChat} />\n        )\n        }\n        {users.length === 0 && 'No users found'}\n      </div>\n      <Paginator curruntPage={curruntPage} pageSize={pageSize}\n        onPageChange={onPageChange} totalUserCount={totalUserCount} />\n    </div>\n  )\n}\n\nexport default Users;","import React from 'react';\nimport Users from './Users';\nimport Preloader from '../Common/Preloader/Preloader';\nimport { getSsFeching } from '../../redux/user-selectors';\nimport { useSelector } from 'react-redux';\n\n\n\n\ntype UserPagePropsType = {\n  pageTitle: string\n}\n\nconst UserPage: React.FC<UserPagePropsType> = (props) => {\n  document.title = props.pageTitle;\n  const isFeching = useSelector(getSsFeching);\n  return (\n    <>\n          {isFeching\n        ? <Preloader /> : null}\n    <h2>{props.pageTitle}</h2>\n      <Users />\n    </>\n  )\n}\n\nexport default UserPage\n\n"],"names":["totalUserCount","pageSize","curruntPage","onPageChange","portionSize","pagesCount","Math","ceil","pages","i","push","potrionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","righttPortionPageNumber","className","styles","onClick","filter","p","map","cn","e","users","followingInProgres","unfollow","follow","createChat","myUserId","useSelector","getMyId","to","id","src","photos","small","userPhoto","alt","name","status","followed","disabled","some","userSearchFormValidate","values","UserSearchForm","React","props","getUsersFilter","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","setSubmitting","onFilterChange","isSubmitting","errors","s","type","placeholder","as","value","getUsersSelectorSuper","getTotalUserCount","getCurruntPage","getPageSize","getFollowingInProgres","dispatch","useDispatch","useEffect","reqestUser","location","useLocation","parsed","require","parse","search","actualFilter","actualPage","page","history","useNavigate","query","queryStrings","stringify","userId","unfollows","follows","friendId","createDiologs","u","length","pageNumber","document","title","pageTitle","isFeching","getSsFeching","Preloader"],"sourceRoot":""}