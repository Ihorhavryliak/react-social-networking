{"version":3,"file":"static/js/57.1ce12ebe.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/Mypost/Mypost.module.css?e854","webpack://my-app/./src/components/Profile/Mypost/Post/Post.module.css?70cb","components/Profile/Mypost/Post/Post.jsx","components/Profile/Mypost/Mypost.jsx","components/Profile/Mypost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"ProfileInfo_image__T+1yF\",\"descri_pbloxk\":\"ProfileInfo_descri_pbloxk__JSjKr\"};","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n  \n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status])\n\n\n  const activateMode = () => {\n    setEditMode(true);\n  };\n\n  let deActivateAditMod = () => {\n   setEditMode(false);\n   props.upDateStatuses(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n}\n\n  return (\n    <div>\n      {!editMode &&\n        <div>\n          <span onDoubleClick={activateMode}>{props.status || '----'}</span>\n        </div>\n      }\n      {editMode &&\n        <div >\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deActivateAditMod}\n            value={status}></input>\n        </div>\n      }\n    </div>\n  )\n\n}\n\n\n\nexport default ProfileStatusWithHooks;","import Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status,  upDateStatuses}) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <div className={s.descri_pbloxk}>\r\n        <img alt='photos' src={profile.photos.large} />\r\n        <ProfileStatusWithHooks status={status} upDateStatuses={upDateStatuses} />\r\n        <div>\r\n          <span>{profile.contacts.facebook} </span>\r\n          <span>{profile.contacts.website} </span>\r\n          <span>{profile.contacts.vk} </span>\r\n          <span>{profile.contacts.twitter} </span>\r\n          <span>{profile.contacts.instagram} </span>\r\n          <span>{profile.contacts.youtube} </span>\r\n          <span>{profile.contacts.github} </span>\r\n          <span>{profile.contacts.youtube} </span>\r\n          <span>{profile.contacts.mainLink} </span>\r\n        </div>\r\n        <div>\r\n          {profile.lookingForAJob === true ? 'Looking a job' : 'No looking a job'}\r\n          <p>\r\n            {(profile.lookingForAJob === true && profile.lookingForAJobDescription.length > 0) \r\n            ? profile.lookingForAJobDescription\r\n            : null }\r\n          </p>\r\n          <p>\r\n          {profile.fullName}\r\n          </p>\r\n          <p>\r\n          {profile.aboutMe}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"Mypost_postBlock__C34LJ\",\"post\":\"Mypost_post__P229j\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__+xHEG\"};","import se from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n            <div className={se.item}>\r\n              <img alt=\"users\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRQG84i10xhs06HlEh2T3aDrrOsG8E1esNT7w&usqp=CAU\"></img>\r\n              {props.messege}\r\n              <div>\r\n                <span>Like</span>\r\n                <span>Like Count: {props.count}</span>\r\n              </div>\r\n              \r\n            </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import se from './Mypost.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, reqiaret } from '../../../utils/validator';\r\nimport { Textarea } from '../../Common/Preloader/FormControl/FormsControl';\r\n\r\nconst maxLenght10 = maxLengthCreator(10);\r\n\r\nconst Mypost = React.memo(props => {\r\n\r\n  let dialogElements = props.postDate.map(phra =>\r\n    (<Post messege={phra.name} key={phra.id} count={phra.count} />));\r\n    \r\n  const onAddPost = (values) => {\r\n    props.adPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={se.postBlock}>\r\n      <h3 className={se.myPost}>\r\n        my pos\r\n      </h3>\r\n      <div>\r\n        <GetFormDateDedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={se.post}>\r\n        {dialogElements}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n});\r\n\r\n//forma\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={'newPostText'} placeholder={'Enter your messege'}\r\n          validate={[reqiaret, maxLenght10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nconst GetFormDateDedux = reduxForm({ form: 'profileAddNewPostForm' })(AddNewPostForm)\r\n\r\nexport default Mypost;","import { adPostActionCreat } from '../../../redux/profile_reducer'\r\nimport Mypost from './Mypost';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postDate: state.profilePage.postDate,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispachToProps = (dispatch) => {\r\n  return {\r\n    adPost: (newPostText) => { dispatch(adPostActionCreat(newPostText)); }\r\n  }\r\n}\r\n\r\n\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispachToProps)(Mypost);\r\n\r\nexport default MyPostContainer;","import ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostContainer from './Mypost/MyPostContainer'\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div >\r\n      <ProfileInfo profile={props.profile} \r\n      status={props.status} upDateStatuses={props.upDateStatuses}/>\r\n      <MyPostContainer />\r\n  </div>\r\n  )\r\n}\r\nexport default Profile","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, upDateStatuses } from '../../redux/profile_reducer';\r\nimport Profile from './Profile';\r\nimport withRouter from '../../hoc/withProfileUrl';\r\nimport { compose } from 'redux';\r\nimport { Navigate, useHistory } from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    \r\n    let userId = this.props.router.params.userId;\r\n\r\n    if (!userId ) {\r\n      userId = this.props.authoraizerUserId;\r\n    \r\n    /*   if (!userId) {\r\n        return <Navigate to='/login' />\r\n\r\n      } */\r\n    } \r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  };\r\n\r\n\r\n  render() {\r\n    let userId = this.props.router.params.userId;\r\n\r\n    if (!userId ) {\r\n      userId = this.props.authoraizerUserId;\r\n    \r\n      if (!userId) {\r\n        return <Navigate to='/login' />\r\n      }\r\n    } \r\n\r\n    return (\r\n      <div >\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status}  \r\n        upDateStatuses={this.props.upDateStatuses}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ( {\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authoraizerUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {  getUserProfile, getStatus, upDateStatuses}),\r\n  withRouter\r\n /*  withAuthRedirect */)(ProfileContainer);"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","upDateStatuses","profile","className","s","alt","src","photos","large","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","length","fullName","aboutMe","Preloader","se","messege","count","maxLenght10","maxLengthCreator","Mypost","React","dialogElements","postDate","map","phra","name","id","GetFormDateDedux","onSubmit","values","adPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","validate","reqiaret","connect","state","profilePage","dispatch","adPostActionCreat","ProfileContainer","userId","this","router","params","authoraizerUserId","getUserProfile","getStatus","to","compose","auth","isAuth","withRouter"],"sourceRoot":""}