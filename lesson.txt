0. Компоненета - це функція яка приймає на вході пропчм повертає розмітку JSX, 
записується з великої літери.
1. Компоненета - це тег.
2. export default - ознає експорт чогось за замовчуванням.
3. props - імя параметра функції. За замовчуванням пустий обєкт {}, передаємо за допомогою 
значення.
4. node.js - використовується для використання пакетів модулів, які помагають писати легше код
для JavaScript, який попадає в браузер. За допомогою npm ми встановлюємо ці пакети.
Це аналог браузера який виконує JavaScript.
5. NavLink - це заміна a тегу при цьому сторінка не перезагружається, треба вказати імпорт,
від 'react-router-dom', щоб використовувати це.
6. BLL (Business Logic Layer) - рівень бізнес логіки. Набір фукцій, файлів що відповідає за 
зберігання даних.
7. UI (User interface) - користувацький інтерфейс, задача відмалювати компонент.
8. Redux - система управління state manage (стан)
9. Чиста функція - коли на вході і на виході одні і ті самі дані.
10. SPA (single page application) - 
11. Функціональна компонента - без стану, тупа, презентабельна.
12. Route - це механізм який вміє аналізувати що написано в юр строці і підгружати ці дані 
на сторінку
13. Call Back - ми ни визаємо функцію, але ми її віддаємо щоб хтось інший визиває її.
14. Virstual DOM - 
15. FLUX - потік даних.
16. Store - обєкт OPP
17. Капсуляція - це закритя деталей
18. _ - ця властивість в обєкті не являється інтерфейсом, щоб ним не користувалися 
в зовнішньому світі (приватна).
19. set - це метод, який втановлює значення якійсь властивості, як правило приватному, 
а також приймає значення присвоюємо цій властивості.
20. get - це метод, який повертає приватну властивість
21. .bind() - це метод повертаю іншу функцію таку саму але всередині буде значення
яке приймає цей метод. 
22. API () - інтерфейс якоїсь програми.
23. state Manage - управліня станами (бізнес логіка).
24. dispach - метод 
25. action - обєкт, якась дія, яке має властивість тип.
26. action creater - функуія яка повертає обєкт
27. action type - це властивість action creater
28. single page aplucation - загружається одна сторінка.
29. Browser Router - переключатися між посиланнями без перезагрузки сторінки
30. reducer - чиста функція яка приймає стейте, екшин, якщо треба приймає цей екшин до
стейту і повертвє новий стейт або повертає стейт який був до цього не змінений.
31. container component - 
32. Context API
33. Determinirovana - результат функції фіксований
34. Idenpotentnost - 
35. interface - те як ми з обєктом взаємодієм
36. API (applicaton program interface) - взаємодію з додатком , тобто як ми з цією програмою взаємодієм
37. Програмний сервер написаний на ноте дж
38. Server Rest Api - набір правил 
39. CRUD - GET -POST - PUT - DELETE
40. axios - бібліотека 
41. Side Effect - ми не повині робити запити на сервер, змінювати параметри, змінювати Dom direction,
42. Классовий компонент (extends React.Component) - наслідується від React.Component і має метод рендер,
на базовій компоненті створюю обєкт посередник  і взаємодію дальше з цим обєктом
43. Withrouter - компонент вищого порядку 
44. REST API - умовна домовленість із сервером щоб підтримувалися всі фічі
45. DAL - (DATA ACEX LAYER ) - запити на сервер API
46. thun - це функція яка робить якусь асинхрону операцію і вміє диспатчити екшити. 
(не чиста функція)
Іі також можна задиспатчити.
47. midwear - проміжутні слої для звязки
48. Redirect - це коли з одної сторінки нас направлять на іншу. Мета захистити дані.
49. High Order Component (hoc) - компонент вищого порядку, функція яка приймає на вході
компонент і повертає інший компонент (конейнер компонент) прийнято, починаються з слова with
50. Функция compose - робить композицію оброблювачів (redux).
51. local state - 
52. setState() - метод з реакт , асинхроний не зразу міняє стейт а пізніше
53. componentDidUpdate - 
54. redux-form - бібліотека
55. selector - це вибірщик чогось, щось звідкись забирає. Тобто робить вибірку даниз із стейту.
І уя вибірка зберігається там.
56. Hook - функції які вміють щось робити і ми має право використовувати її в 
функціональні компоненті
57. useEfect - метод хук який каже закиньте мене функцію яку я виконаю, коли станеться 
перемалювання .
57. Hookі -це функціі які не можна писати в умовах 
58. Virtual DOM - це спрощене версія Virtual DOM (набір якихось обєктів) 
59. PureComponent - це компонент який перевіряє стейт і пропс на зміни
60. pure function (чистая функция): 
1.Правило imutibility - повина не мутувати те що в неї прийшло (копіюємо ...)
2. Є return - вона щось повертає, якісь дані
3. No side effects - немає мусуру у зовнішньому світі. получив - щось зробив - повернув, 
ніякі глобальні змінни не використовував і не міняв, не міняв те що в мене прийшло. Імено 
по цьому не можна робити Ajax запит. Потрібно componentam, reducer, selectoram.
4. Determained (Idempotentnos) - на вхід скільки через мене не пускай дані я поверну
 тобі одину і ту саму відповідь. (get - Idempotentnos, post - no Idempotentnos)
61. React.Suspense -
62. React.lazy - завантаження вона як би але ми тим не користуємося, фле коли ми дійсно будемо
цим користуватися вона швидко загрузиться (з затримкою)
update - yarn build  yarn build then
1. npm run build
2. yarn run deploy